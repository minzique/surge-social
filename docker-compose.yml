version: '3.8'

services:
  backend:
    restart: always
    build:
      context: ./backend
      dockerfile: ../docker/backend.dockerfile
    ports:
      - "${BACKEND_PORT:-5000}:${BACKEND_PORT:-5000}"
    env_file: 
      - ./.env
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=${BACKEND_PORT}
      - RECAPTCHA_SECRET_KEY=${RECAPTCHA_SECRET_KEY}
      - RECAPTCHA_SITE_KEY=${RECAPTCHA_SITE_KEY}
      - NODE_ENV=${NODE_ENV}
    volumes:
      - /app/node_modules
    depends_on:
      - mongodb
    networks:
      - app-network

  frontend:
    restart: always
    build:
      context: ./frontend
      dockerfile: ../docker/frontend.dockerfile
    ports:
      - "${FRONTEND_PORT:-3000}:${FRONTEND_PORT:-3000}" 
    env_file: 
      - ./frontend/.env
    depends_on:
      - backend
    networks:
      - app-network

  mongodb:
    restart: always
    image: mongo:5
    environment:
      MONGO_INITDB_DATABASE: surge-social
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network
  
  # Add Nginx reverse proxy for SSL termination
  nginx:
    restart: always
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro # Mount SSL certificates
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
  
  # Automatically renew SSL certificates
  certbot:
    restart: always
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  mongo_data:
